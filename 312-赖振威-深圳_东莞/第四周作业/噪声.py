import cv2 as cv  # 导入OpenCV库，用于图像处理
import numpy as np  # 导入NumPy库，用于数组操作
from PIL import Image  # 导入PIL库中的Image模块，用于图像处理
from skimage import util  # 从skimage库中导入util模块，用于添加随机噪声到图像中

'''
def random_noise(image, mode='gaussian', seed=None, clip=True, **kwargs):
功能：为浮点型图片添加各种随机噪声
参数：
image：输入图片（将会被转换成浮点型），ndarray型
mode： 可选择，str型，表示要添加的噪声类型
	gaussian：高斯噪声  通过向图像的每个像素添加服从高斯分布的随机值来模拟真实世界中的噪声。这种噪声会使图像变得模糊，细节变得不清晰，整体上看起来有一种轻微的模糊感。
	localvar：高斯分布的加性噪声，在“图像”的每个点处具有指定的局部方差。  在图像的每个像素点处具有指定的局部方差，这种噪声会使图像在不同区域具有不同程度的模糊和细节丢失。
	poisson：泊松噪声  模拟从光子源发出的光子数目的随机性，通常在低光条件下的图像中出现。这种噪声会使图像在暗区域出现随机的亮度波动，看起来像是颗粒状的噪点。
	salt：盐噪声，随机将像素值变成1     分别随机将像素值变成最大值或最小值，这会在图像中产生突然的亮点或暗点，导致图像出现明显的噪点。
	pepper：椒噪声，随机将像素值变成0或-1，取决于矩阵的值是否带符号     分别随机将像素值变成最大值或最小值，这会在图像中产生突然的亮点或暗点，导致图像出现明显的噪点。
	s&p：椒盐噪声    结合了盐噪声和椒噪声，会在图像中同时出现亮点和暗点，给人一种画面上有颗粒状噪点的感觉。
	speckle：均匀噪声（均值mean方差variance），out=image+n*image   通过在图像的每个像素添加服从均匀分布的随机值来模拟噪声。这种噪声会使图像变得粗糙，整体上看起来有一种均匀加粗的感觉
	不同类型的噪声会对图像的质量产生不同的影响，包括模糊、颗粒状噪点、亮度波动等，而具体效果还会受到参数设置的影响
	
	在计算机视觉（CV）领域，使用这些模糊技术有以下几个重要的原因：
    1.模拟真实环境：在现实世界中，由于摄像头质量、光线条件、运动模糊等因素，图像往往会受到各种类型的模糊和噪声的影响。通过在计算机中模拟这些现实情况，可以更好地评估和改进计算机视觉算法在实际应用中的性能。
    2.测试算法鲁棒性：模糊技术可以用于测试计算机视觉算法对噪声和模糊的鲁棒性。一个优秀的 CV 算法应该对噪声和模糊具有一定的抵抗能力，能够在复杂环境下取得良好的表现。
    3.数据增强：在训练深度学习模型时，通过向图像添加模糊和噪声，可以扩充训练数据集，增加模型对各种情况的适应能力，提高泛化能力。
    4.隐私保护：在一些应用场景下，需要对图像进行模糊处理以保护隐私。例如，在人脸识别中，可以对图像进行模糊处理以隐藏面部特征，从而保护个人隐私。
    5.图像增强：在一些图像处理任务中，适当的模糊处理可以帮助去除图像中的噪声，平滑图像，并突出图像中的一些特征。
    综上所述，模糊技术在计算机视觉领域具有广泛的应用，可以用于模拟真实环境、测试算法鲁棒性、数据增强、隐私保护和图像增强等方面。
    6.降低数据复杂性：在一些计算机视觉任务中，图像噪声和模糊可能会增加数据的复杂性，降低算法的效率和准确性。通过对图像进行适当的模糊处理，可以降低数据的复杂性，使得算法更容易处理。
    7.去除细节信息：在一些场景下，过多的细节信息可能会让算法产生过拟合或者错误的判断。通过模糊处理，可以削弱图像中的细节信息，使得算法更专注于图像中的整体特征，避免过度关注局部细节。
    8.图像修复：在一些受损的图像中，可能存在各种类型的损坏，例如噪点、缺失区域等。通过适当的模糊技术，可以尝试恢复受损图像的信息，减轻损伤的影响，提高图像的可视化质量。
    在计算机视觉领域，模糊技术不仅可以用于模拟现实环境和测试算法性能，还可以在数据处理、隐私保护、图像增强和修复等方面发挥重要作用，为各种 CV 应用提供了丰富的工具和技术支持。
    9.增强图像美感：在一些艺术创作和设计领域，适度的模糊处理可以带来视觉上的柔和效果，增强图像的美感和艺术感。通过模糊处理，可以调整图像的质感和色彩分布，达到特定的艺术效果。
    10.提高图像压缩效率：在图像压缩和传输过程中，适当的模糊处理可以减少图像中的细节信息，从而提高压缩算法的效率和压缩比率。通过降低图像中的细节信息，可以减小图像文件的大小，加快传输速度，并节省存储空间。
    11.模糊背景突出主体：在摄影和图像处理中，通过对背景进行模糊处理，可以突出图像中的主体物体，使主体更加突出和引人注目。这种技术常用于人像摄影和艺术创作中，帮助营造焦点和视觉层次感。
    总的来说，模糊技术在计算机视觉领域具有广泛的应用和重要性，不仅可以用于测试算法性能和数据处理，还可以在艺术创作、图像美感、压缩传输等方面发挥作用，为各种应用场景提供了多样化的解决方案和创新技术。

seed： 可选的，int型，如果选择的话，在生成噪声前会先设置随机种子以避免伪随机
    关键知识点: 设置随机种子可确保结果的可复现性。
    示例: 比如使用相同的随机种子值，在不同时间执行相同的噪声生成操作将产生相同的噪声模式，从而确保结果一致

clip： 可选的，bool型，如果是True，在添加均值，泊松以及高斯噪声后，会将图片的数据裁剪到合适范围内。如果谁False，则输出矩阵的值可能会超出[-1,1]
    关键知识点: 当clip设置为True时，会限制像素值在指定范围内，避免图像失真。
    示例: 如果在添加高斯噪声后将clip设置为True，超出范围的像素值会被裁剪到指定范围内，保持图像质量。

mean： 可选的，float型，高斯噪声和均值噪声中的mean参数，默认值=0
    关键知识点: 均值参数影响整体图像的亮度或暗度。
    示例: 将均值参数设置为正值会使图像整体变亮，而负值则会使其变暗，例如设置mean为10会使整个图像整体变亮。

var：  可选的，float型，高斯噪声和均值噪声中的方差，默认值=0.01（注：不是标准差）
    关键知识点: 高斯噪声中的方差控制噪声的强度。
    示例: 增大方差值会增加生成的高斯噪声的强度，使图像更加模糊或有颗粒感。

local_vars：可选的，ndarry型，用于定义每个像素点的局部方差，在localvar中使用
    关键知识点: 用于定义每个像素点的局部方差，实现局部噪声的效果。
    示例: 通过提供一个与图像尺寸相同的ndarray，其中每个像素值表示该像素点的局部方差，可以实现在不同区域施加不同强度的噪声，进而产生局部细节的变化。

amount： 可选的，float型，是椒盐噪声所占比例，默认值=0.05
    关键知识点: 控制椒盐噪声所占比例，即黑白像素点的密集程度。
    示例: 设置amount为0.1意味着有10%的像素点会被替换为椒盐噪声，增加了图像的随机性。

salt_vs_pepper：可选的，float型，椒盐噪声中椒盐比例，值越大表示盐噪声越多，默认值=0.5，即椒盐等量
    关键知识点: 控制椒盐噪声中椒盐比例，值越大表示盐噪声（白色像素）越多。
    示例: 将salt_vs_pepper设置为0.7会增加盐噪声的比例，导致更多的白色或黑色像素点出现在图像中，从而改变图像的整体外观。

--------
返回值：ndarry型，且值在[0,1]或者[-1,1]之间，取决于是否是有符号数
'''

img = cv.imread("lenna.png")  # 使用OpenCV读取名为"lenna.png"的图片并存储在img变量中
noise_gs_img = util.random_noise(img, mode='poisson')  # 向图像添加泊松噪声并保存在noise_gs_img变量中

cv.imshow("source", img)  # 显示原始图像
cv.imshow("lenna", noise_gs_img)  # 显示添加了泊松噪声的图像
#cv.imwrite('lenna_noise.png', noise_gs_img)  # 将添加噪声后的图像保存为"lenna_noise.png"
cv.waitKey(0)  # 等待用户按下任意键
cv.destroyAllWindows()  # 关闭所有窗口
